{"version":3,"sources":["webpack:///./assets/js/theme/auth.js"],"names":["Auth","formCreateSelector","registerLoginValidation","$loginForm","loginModel","forms","loginValidator","nod","submit","add","selector","validate","cb","val","result","email","errorMessage","context","useValidEmail","password","enterPass","event","performCheck","areAll","preventDefault","registerForgotPasswordValidation","$forgotPasswordForm","forgotPasswordValidator","registerNewPasswordValidation","newPasswordForm","newPasswordValidator","$","passwordSelector","password2Selector","Validators","setPasswordValidation","passwordRequirements","registerCreateAccountValidator","$createAccountForm","validationModel","validation","createAccountValidator","$stateElement","emailSelector","$emailElement","$passwordElement","$password2Element","$last","stateCountry","err","field","Error","$field","getStatus","remove","is","setStateCountryValidation","cleanUpStateValidation","setEmailValidation","loaded","next","classifyForm","$newPasswordForm","length","PageManager"],"mappings":"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","file":"theme-bundle.chunk.16.js","sourcesContent":["import PageManager from './page-manager';\r\nimport stateCountry from './common/state-country';\r\nimport $ from 'jquery';\r\nimport nod from './common/nod';\r\nimport validation from './common/form-validation';\r\nimport forms from './common/models/forms';\r\nimport { classifyForm, Validators } from './common/form-utils';\r\n\r\nexport default class Auth extends PageManager {\r\n    constructor() {\r\n        super();\r\n        this.formCreateSelector = 'form[data-create-account-form]';\r\n    }\r\n\r\n    registerLoginValidation($loginForm) {\r\n        const loginModel = forms;\r\n\r\n        this.loginValidator = nod({\r\n            submit: '.login-form input[type=\"submit\"]',\r\n        });\r\n\r\n        this.loginValidator.add([\r\n            {\r\n                selector: '.login-form input[name=\"login_email\"]',\r\n                validate: (cb, val) => {\r\n                    const result = loginModel.email(val);\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: this.context.useValidEmail,\r\n            },\r\n            {\r\n                selector: '.login-form input[name=\"login_pass\"]',\r\n                validate: (cb, val) => {\r\n                    const result = loginModel.password(val);\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: this.context.enterPass,\r\n            },\r\n        ]);\r\n\r\n        $loginForm.submit((event) => {\r\n            this.loginValidator.performCheck();\r\n\r\n            if (this.loginValidator.areAll('valid')) {\r\n                return;\r\n            }\r\n\r\n            event.preventDefault();\r\n        });\r\n    }\r\n\r\n    registerForgotPasswordValidation($forgotPasswordForm) {\r\n        this.forgotPasswordValidator = nod({\r\n            submit: '.forgot-password-form input[type=\"submit\"]',\r\n        });\r\n\r\n        this.forgotPasswordValidator.add([\r\n            {\r\n                selector: '.forgot-password-form input[name=\"email\"]',\r\n                validate: (cb, val) => {\r\n                    const result = forms.email(val);\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: this.context.useValidEmail,\r\n            },\r\n        ]);\r\n\r\n        $forgotPasswordForm.submit((event) => {\r\n            this.forgotPasswordValidator.performCheck();\r\n\r\n            if (this.forgotPasswordValidator.areAll('valid')) {\r\n                return;\r\n            }\r\n\r\n            event.preventDefault();\r\n        });\r\n    }\r\n\r\n    registerNewPasswordValidation() {\r\n        const newPasswordForm = '.new-password-form';\r\n        const newPasswordValidator = nod({\r\n            submit: $(`${newPasswordForm} input[type=\"submit\"]`),\r\n        });\r\n        const passwordSelector = $(`${newPasswordForm} input[name=\"password\"]`);\r\n        const password2Selector = $(`${newPasswordForm} input[name=\"password_confirm\"]`);\r\n\r\n        Validators.setPasswordValidation(\r\n            newPasswordValidator,\r\n            passwordSelector,\r\n            password2Selector,\r\n            this.passwordRequirements,\r\n        );\r\n    }\r\n\r\n    registerCreateAccountValidator($createAccountForm) {\r\n        const validationModel = validation($createAccountForm);\r\n        const createAccountValidator = nod({\r\n            submit: `${this.formCreateSelector} input[type='submit']`,\r\n        });\r\n        const $stateElement = $('[data-field-type=\"State\"]');\r\n        const emailSelector = `${this.formCreateSelector} [data-field-type='EmailAddress']`;\r\n        const $emailElement = $(emailSelector);\r\n        const passwordSelector = `${this.formCreateSelector} [data-field-type='Password']`;\r\n        const $passwordElement = $(passwordSelector);\r\n        const password2Selector = `${this.formCreateSelector} [data-field-type='ConfirmPassword']`;\r\n        const $password2Element = $(password2Selector);\r\n\r\n        createAccountValidator.add(validationModel);\r\n\r\n        if ($stateElement) {\r\n            let $last;\r\n\r\n            // Requests the states for a country with AJAX\r\n            stateCountry($stateElement, this.context, (err, field) => {\r\n                if (err) {\r\n                    throw new Error(err);\r\n                }\r\n\r\n                const $field = $(field);\r\n\r\n                if (createAccountValidator.getStatus($stateElement) !== 'undefined') {\r\n                    createAccountValidator.remove($stateElement);\r\n                }\r\n\r\n                if ($last) {\r\n                    createAccountValidator.remove($last);\r\n                }\r\n\r\n                if ($field.is('select')) {\r\n                    $last = field;\r\n                    Validators.setStateCountryValidation(createAccountValidator, field);\r\n                } else {\r\n                    Validators.cleanUpStateValidation(field);\r\n                }\r\n            });\r\n        }\r\n\r\n        if ($emailElement) {\r\n            createAccountValidator.remove(emailSelector);\r\n            Validators.setEmailValidation(createAccountValidator, emailSelector);\r\n        }\r\n\r\n        if ($passwordElement && $password2Element) {\r\n            createAccountValidator.remove(passwordSelector);\r\n            createAccountValidator.remove(password2Selector);\r\n            Validators.setPasswordValidation(\r\n                createAccountValidator,\r\n                passwordSelector,\r\n                password2Selector,\r\n                this.passwordRequirements,\r\n            );\r\n        }\r\n\r\n        $createAccountForm.submit((event) => {\r\n            createAccountValidator.performCheck();\r\n\r\n            if (createAccountValidator.areAll('valid')) {\r\n                return;\r\n            }\r\n\r\n            event.preventDefault();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Request is made in this function to the remote endpoint and pulls back the states for country.\r\n     * @param next\r\n     */\r\n    loaded(next) {\r\n        const $createAccountForm = classifyForm(this.formCreateSelector);\r\n        const $loginForm = classifyForm('.login-form');\r\n        const $forgotPasswordForm = classifyForm('.forgot-password-form');\r\n        const $newPasswordForm = classifyForm('.new-password-form'); // reset password\r\n\r\n        // Injected via auth.html\r\n        this.passwordRequirements = this.context.passwordRequirements;\r\n\r\n        if ($loginForm.length) {\r\n            this.registerLoginValidation($loginForm);\r\n        }\r\n\r\n        if ($newPasswordForm.length) {\r\n            this.registerNewPasswordValidation();\r\n        }\r\n\r\n        if ($forgotPasswordForm.length) {\r\n            this.registerForgotPasswordValidation($forgotPasswordForm);\r\n        }\r\n\r\n        if ($createAccountForm.length) {\r\n            this.registerCreateAccountValidator($createAccountForm);\r\n        }\r\n\r\n        next();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./assets/js/theme/auth.js"],"sourceRoot":""}